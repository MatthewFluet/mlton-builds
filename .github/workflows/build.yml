name: build
run-name: ${{ inputs.name }}

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'name'
        type: string
      repo:
        description: 'repo'
        required: true
        default: 'MLton'
        type: string
      ref:
        description: 'git ref'
        required: true
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - { name: i686, alt: x86 }
          - { name: x86_64, alt: amd64 }
          - { name: aarch64, alt: arm64 }
          - { name: powerpc, alt: powerpc }
          - { name: powerpc64, alt: powerpc64 }
          - { name: riscv32, alt: riscv }
          - { name: riscv64, alt: riscv }
        libc: [ gnu, musl ]
        include:
          - { arch: { name: arm, alt: arm }, libc: gnueabihf }
          - { arch: { name: arm, alt: arm }, libc: musleabihf }
        exclude: [ { arch: { name: riscv32, alt: riscv }, libc: gnu } ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}/mlton
          ref: ${{ inputs.ref }}

      - name: Install qemu
        run: |
          sudo apt-get update
          sudo apt-get install qemu-user-static

      - name: Install toolchain (musl)
        if: ${{ startsWith(matrix.libc, 'musl') }}
        run: |
          curl -sOL https://more.musl.cc/x86_64-linux-musl/${{ matrix.arch.name }}-linux-${{ matrix.libc }}-cross.tgz
          tar -xf ${{ matrix.arch.name }}-linux-${{ matrix.libc }}-cross.tgz
          sudo cp -fpr ${{ matrix.arch.name }}-linux-${{ matrix.libc }}-cross/* /usr/local/
          rm -r ${{ matrix.arch.name }}-linux-${{ matrix.libc }}-cross \
                ${{ matrix.arch.name }}-linux-${{ matrix.libc }}-cross.tgz

      - name: Install toolchain (glibc)
        if: ${{ startsWith(matrix.libc, 'gnu') && matrix.arch.name != 'x86_64' }}
        run: |
          sudo apt-get install gcc-${{ matrix.arch.name }}-linux-${{ matrix.libc }} \
                               binutils-${{ matrix.arch.name }}-linux-${{ matrix.libc }}

      - name: Link cc to gcc
        if: ${{ startsWith(matrix.libc, 'gnu') }}
        run: |
          sudo ln -s /usr/bin/${{ matrix.arch.name }}-linux-${{ matrix.libc }}-gcc \
                     /usr/bin/${{ matrix.arch.name }}-linux-${{ matrix.libc }}-cc

      - name: Install gmp
        run: |
          curl -sOL https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz
          tar -xf gmp-6.3.0.tar.xz
          cd gmp-6.3.0
          ./configure --disable-shared \
                      ${{ matrix.arch.name == 'i686' && '--with-pic' || '' }} \
                      ${{ matrix.arch.name == 'arm' && '--with-pic CFLAGS="-march=armv6 -mfpu=vfp -mfloat-abi=hard -O2 -pedantic"' || '' }} \
                      ${{ startsWith(matrix.arch.name, 'powerpc') && '--disable-assembly' || '' }} \
                      --build=x86_64-linux-gnu \
                      --host=${{ matrix.arch.name }}-linux-${{ matrix.libc }}
          make
          # make check
          sudo make install
          cd ${{ github.workspace }}
          rm -r gmp-6.3.0 gmp-6.3.0.tar.xz

      - name: Install bootstrap mlton
        run: |
          curl -sOL https://github.com/MLton/mlton/releases/download/on-20210117-release/mlton-20210117-1.amd64-linux-glibc2.31.tgz
          tar -xf mlton-20210117-1.amd64-linux-glibc2.31.tgz --exclude='*/share'
          rm mlton-20210117-1.amd64-linux-glibc2.31.tgz
          sudo mv mlton-20210117-1.amd64-linux-glibc2.31 /opt/boot
          # Backport fixes
          sudo cp -p runtime/platform/linux.h /opt/boot/lib/mlton/include/platform/linux.h

      - name: Build target runtime (old)
        if: ${{ false }}
        run: |
          curl -sOL https://github.com/MLton/mlton/releases/download/on-20210117-release/mlton-20210117.src.tgz
          tar xzf mlton-20210117.src.tgz
          rm mlton-20210117.src.tgz
          mv mlton-20210117 src
          cp runtime/platform/linux.h src/runtime/platform/linux.h
          cd src
          PATH="/opt/boot/bin:$PATH" make \
            LDFLAGS=-static BOOTSTRAP_STYLE=0 \
            TARGET=${{ matrix.arch.name }}-linux-${{ matrix.libc }} TARGET_ARCH=${{ matrix.arch.alt }} TARGET_OS=linux \
            WITH_GMP_DIR=/usr/local \
            dirs runtime
          sudo cp -fpR src/build/lib/mlton/targets/${{ matrix.arch.name }}-linux-${{ matrix.libc }} /opt/boot/lib/mlton/targets/

      - name: Build target runtime (new)
        if: ${{ true }}
        run: |
          PATH="/opt/boot/bin:$PATH" make \
            LDFLAGS=-static BOOTSTRAP_STYLE=0 \
            ${{ matrix.arch.name == 'arm' && 'CFLAGS="-march=armv6 -mfpu=vfp -mfloat-abi=hard"' || '' }} \
            TARGET=${{ matrix.arch.name }}-linux-${{ matrix.libc }} TARGET_ARCH=${{ matrix.arch.alt }} TARGET_OS=linux \
            WITH_GMP_DIR=/usr/local \
            dirs runtime
          sudo cp -fpR build/lib/mlton/targets/${{ matrix.arch.name }}-linux-${{ matrix.libc }} /opt/boot/lib/mlton/targets/

      - name: Build MLton
        run: |
          PATH="/opt/boot/bin:$PATH" make \
            BOOTSTRAP_STYLE=0 \
            TARGET=${{ matrix.arch.name }}-linux-${{ matrix.libc }} TARGET_ARCH=${{ matrix.arch.alt }} TARGET_OS=linux \
            OLD_MLTON_COMPILE_ARGS="-cc-opt -I/usr/local/include -link-opt -L/usr/local/lib -link-opt -static ${{ matrix.arch.name == 'arm' && '-cc-opt -march=armv6 -cc-opt -mfpu=vfp -cc-opt -mfloat-abi=hard' || '' }}" \
            dirs runtime compiler script basis-no-check libraries-no-check tools
          mv build/lib/mlton/targets/${{ matrix.arch.name }}-linux-${{ matrix.libc }} build/lib/mlton/targets/self

      - name: Status
        run: |
          git status
          file build/lib/mlton/mlton-compile
          build/bin/mlton -show path-map

      - name: Limit tests
        run: |
          mv regression/real.sml .
          rm -r regression/*
          mv real.sml regression/
          mv benchmark/tests/raytrace.sml .
          rm -r benchmark/tests/*
          mv raytrace.sml benchmark/tests/

      - name: Test
        run: |
          ulimit -c unlimited
          ./bin/regression -verbose 1 \
                           -cc ${{ matrix.arch.name }}-linux-${{ matrix.libc }}-gcc \
                           -cc-opt -I/usr/local/include \
                           -link-opt -L/usr/local/lib \
                           -link-opt -static

      - name: Coredump
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coredump-${{ matrix.arch.name }}-${{ matrix.libc }}
          path: /var/lib/apport/coredump/*

      - name: Package
        run: |
          mv Makefile.binary build/Makefile
          mv build mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux-${{ matrix.libc }}
          tar czvf mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux-${{ matrix.libc }}.tgz \
                   mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux-${{ matrix.libc }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux-${{ matrix.libc }}
          path: mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux-${{ matrix.libc }}.tgz
