name: build

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'repo'
        required: true
        default: 'MLton'
        type: string
      ref:
        description: 'git ref'
        required: true
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [ { name: x86_64, alt: amd64 }, { name: aarch64, alt: arm64 }, { name: powerpc, alt: powerpc } ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}/mlton
          ref: ${{ inputs.ref }}

      - name: Install system prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install libgmp-dev qemu-user-static

      - name: Install toolchain
        run: |
          curl -sOL https://more.musl.cc/x86_64-linux-musl/${{ matrix.arch.name }}-linux-musl-cross.tgz
          tar -xf ${{ matrix.arch.name }}-linux-musl-cross.tgz
          rm ${{ matrix.arch.name }}-linux-musl-cross.tgz
          sudo cp -fpr ${{ matrix.arch.name }}-linux-musl-cross/* /usr/local/

      - name: Install gmp
        run: |
          curl -sOL https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz
          tar -xf gmp-6.3.0.tar.xz
          rm gmp-6.3.0.tar.xz
          cd gmp-6.3.0
          ./configure --disable-shared --build=x86_64-linux-gnu --host=${{ matrix.arch.name }}-linux-musl
          make
          # make check
          sudo make install

      - name: Install bootstrap mlton
        run: |
          curl -sOL https://github.com/MLton/mlton/releases/download/on-20210117-release/mlton-20210117-1.amd64-linux-glibc2.31.tgz
          tar xzf mlton-20210117-1.amd64-linux-glibc2.31.tgz --exclude='*/share'
          rm mlton-20210117-1.amd64-linux-glibc2.31.tgz
          mv mlton-20210117-1.amd64-linux-glibc2.31 boot
          # Backport fixes
          cp runtime/platform/linux.h boot/lib/mlton/include/platform/linux.h

      - name: Build target runtime (old)
        if: ${{ false }}
        run: |
          cd boot
          curl -sOL https://github.com/MLton/mlton/releases/download/on-20210117-release/mlton-20210117.src.tgz
          tar xzf mlton-20210117.src.tgz
          rm mlton-20210117.src.tgz
          mv mlton-20210117 src
          cp ../runtime/platform/linux.h src/runtime/platform/linux.h
          cd src
          PATH="${{ github.workspace }}/boot/bin:$PATH" make LDFLAGS=-static BOOTSTRAP_STYLE=0 TARGET=${{ matrix.arch.name }}-linux-musl TARGET_ARCH=${{ matrix.arch.alt }} WITH_GMP_DIR=/usr/local dirs
          PATH="${{ github.workspace }}/boot/bin:$PATH" make LDFLAGS=-static BOOTSTRAP_STYLE=0 TARGET=${{ matrix.arch.name }}-linux-musl TARGET_ARCH=${{ matrix.arch.alt }} WITH_GMP_DIR=/usr/local runtime
          cp -fpR src/build/lib/mlton/targets/${{ matrix.arch.name }}-linux-musl lib/mlton/targets/

      - name: Build target runtime (new)
        if: ${{ true }}
        run: |
          PATH="${{ github.workspace }}/boot/bin:$PATH" make LDFLAGS=-static BOOTSTRAP_STYLE=0 TARGET=${{ matrix.arch.name }}-linux-musl TARGET_ARCH=${{ matrix.arch.alt }} WITH_GMP_DIR=/usr/local dirs
          PATH="${{ github.workspace }}/boot/bin:$PATH" make LDFLAGS=-static BOOTSTRAP_STYLE=0 TARGET=${{ matrix.arch.name }}-linux-musl TARGET_ARCH=${{ matrix.arch.alt }} WITH_GMP_DIR=/usr/local runtime
          cp -fpR build/lib/mlton/targets/${{ matrix.arch.name }}-linux-musl boot/lib/mlton/targets/

      - name: Build MLton
        run: |
          PATH="$(pwd)/boot/bin:$PATH" \
          make \
            BOOTSTRAP_STYLE=0 \
            TARGET=${{ matrix.arch.name }}-linux-musl TARGET_ARCH=${{ matrix.arch.alt }} \
            OLD_MLTON_COMPILE_ARGS="-cc-opt -I/usr/local/include -link-opt '-static -L/usr/local/lib'" \
            dirs runtime compiler script basis-no-check libraries-no-check tools

          mv build/lib/mlton/targets/${{ matrix.arch.name }}-linux-musl build/lib/mlton/targets/self
          mv Makefile.binary build/Makefile
          mv build mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux
          tar czvf mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux.tgz mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mlton-${{ inputs.ref }}.${{ matrix.arch.name }}-linux
          path: ./*.tgz
